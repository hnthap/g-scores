services:

  db:
    build: 
      context: ./db/
    restart: on-failure
    ports: 
      - "3306:3306"
    env_file: "db.docker.env"
    volumes:
      - "./db/data:/var/lib/mysql"
      - "./db/sql:/docker-entrypoint-initdb.d"
      - "./db/raw:/var/lib/mysql-files"
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 1m
      timeout: 15s
      retries: 20
      start_period: 20s

  backend:
    build: 
      context: ./backend/
    command: python manage.py runserver 0.0.0.0:3000
    volumes:
      - "./backend:/usr/src/app"
      - "./db/data:/var/lib/mysql"
    env_file: "db.docker.env"
    ports: 
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    networks:
      - my-network

  frontend:
    build:
      context: ./frontend/
    volumes:
      - "./frontend:/home/static"
    ports:
      - "8080:8080"
    depends_on:
      - "backend"
    networks:
      - my-network
    develop:
      watch:
        - action: rebuild
          path: ./frontend
          target: /home/static

networks:
  my-network:
